/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export interface InstantiateMsg {
  box_config: BoxRewardConfig;
  gov?: Addr | null;
  nft_contract: Addr;
}
export interface BoxRewardConfig {
  box_open_time: number;
  box_reward_token: Addr;
  ordinary_box_reward_level_config: {
    [k: string]: OrdinaryBoxRewardLevelConfig;
  };
  random_box_reward_rule_config: RandomBoxRewardRuleConfig[];
  random_in_box_level_index: number;
  [k: string]: unknown;
}
export interface OrdinaryBoxRewardLevelConfig {
  max_reward_count: number;
  reward_amount: number;
  [k: string]: unknown;
}
export interface RandomBoxRewardRuleConfig {
  max_reward_count: number;
  random_box_index: number;
  random_reward_amount: number;
  random_total_count: number;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  update_reward_config: {
    gov?: Addr | null;
    nft_contract?: Addr | null;
  };
} | {
  update_box_reward_config: {
    box_open_time?: number | null;
    box_reward_token?: Addr | null;
  };
} | {
  open_blind_box: {
    token_ids: string[];
  };
};
export type QueryMsg = {
  query_all_config_and_state: {};
} | {
  query_box_open_info: {
    token_ids: string[];
  };
} | {
  test_random: {
    token_ids: string[];
  };
};
export interface AllConfigAndStateResponse {
  box_config: BoxRewardConfig;
  box_state: BoxRewardConfigState;
  config: RewardConfig;
}
export interface BoxRewardConfigState {
  ordinary_box_reward_level_config_state: {
    [k: string]: OrdinaryBoxRewardLevelConfigState;
  };
  ordinary_total_open_box_count: number;
  ordinary_total_reward_amount: number;
  random_box_reward_rule_config_state: RandomBoxRewardRuleConfigState[];
  random_total_open_box_count: number;
  random_total_reward_amount: number;
  [k: string]: unknown;
}
export interface OrdinaryBoxRewardLevelConfigState {
  total_open_box_count: number;
  total_reward_amount: number;
  [k: string]: unknown;
}
export interface RandomBoxRewardRuleConfigState {
  total_open_box_count: number;
  total_reward_amount: number;
  [k: string]: unknown;
}
export interface RewardConfig {
  gov: Addr;
  nft_contract: Addr;
  [k: string]: unknown;
}
export type ArrayOfBoxOpenInfoResponse = BoxOpenInfoResponse[];
export interface BoxOpenInfoResponse {
  is_random_box: boolean;
  open_box_time: number;
  open_reward_amount: number;
  open_user: Addr;
  token_id: string;
}
export interface MapOfUint64 {
  [k: string]: number;
}
export type BlindBoxRewardExecuteMsg = ExecuteMsg;