/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.33.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  end_time: number;
  gov?: Addr | null;
  integral_reward_coefficient: Uint128;
  lock_duration: number;
  lock_token: Addr;
  mint_nft_cost_integral: Uint128;
  mod_num: number;
  punish_coefficient: Uint128;
  punish_receiver: Addr;
  start_time: number;
  winning_num: number[];
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_config: TreasureConfigMsg;
} | {
  user_withdraw: {
    amount: Uint128;
  };
} | {
  pre_mint_nft: {
    mint_num: number;
  };
};
export type Binary = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface TreasureConfigMsg {
  end_time?: number | null;
  gov?: Addr | null;
  integral_reward_coefficient?: Uint128 | null;
  lock_duration?: number | null;
  lock_token?: Addr | null;
  mint_nft_cost_integral?: Uint128 | null;
  mod_num?: number | null;
  punish_coefficient?: Uint128 | null;
  punish_receiver?: Addr | null;
  start_time?: number | null;
  winning_num?: number[] | null;
}
export type QueryMsg = {
  query_config_infos: {};
} | {
  query_user_infos: {
    msg: QueryUserInfosMsg;
  };
};
export interface QueryUserInfosMsg {
  limit?: number | null;
  query_lock_records: boolean;
  query_mint_nft_records: boolean;
  query_user_state: boolean;
  query_withdraw_records: boolean;
  start_after?: string | null;
  user_addr: Addr;
}
export interface ConfigInfosResponse {
  config: TreasureConfig;
  state: TreasureState;
}
export interface TreasureConfig {
  end_time: number;
  gov: Addr;
  integral_reward_coefficient: Uint128;
  lock_duration: number;
  lock_token: Addr;
  mint_nft_cost_integral: Uint128;
  mod_num: number;
  punish_coefficient: Uint128;
  punish_receiver: Addr;
  start_time: number;
  winning_num: number[];
  [k: string]: unknown;
}
export interface TreasureState {
  current_integral_amount: Uint128;
  current_locked_amount: Uint128;
  total_locked_amount: Uint128;
  total_lose_nft_num: number;
  total_punish_amount: Uint128;
  total_win_nft_num: number;
  total_withdraw_amount: Uint128;
  [k: string]: unknown;
}
export interface UserInfosResponse {
  lock_records?: UserLockRecord[] | null;
  mint_nft_records?: UserMintNftRecord[] | null;
  user_state?: TreasureUserState | null;
  withdraw_records?: UserWithdrawRecord[] | null;
}
export interface UserLockRecord {
  end_lock_time: number;
  integral_reward_coefficient: Uint128;
  lock_amount: Uint128;
  lock_duration: number;
  record_id: number;
  start_lock_time: number;
  user_addr: Addr;
  [k: string]: unknown;
}
export interface UserMintNftRecord {
  mint_nft_cost_integral_amount: Uint128;
  mint_nft_num: number;
  mint_time: number;
  record_id: number;
  user_addr: Addr;
  win_nft_num: number;
  [k: string]: unknown;
}
export interface TreasureUserState {
  current_integral_amount: Uint128;
  current_locked_amount: Uint128;
  end_lock_time: number;
  lose_nft_num: number;
  start_lock_time: number;
  total_cost_integral_amount: Uint128;
  total_locked_amount: Uint128;
  total_punish_amount: Uint128;
  total_withdraw_amount: Uint128;
  win_nft_num: number;
  [k: string]: unknown;
}
export interface UserWithdrawRecord {
  punish_amount: Uint128;
  record_id: number;
  user_addr: Addr;
  withdraw_amount: Uint128;
  withdraw_time: number;
  [k: string]: unknown;
}
export type TreasureExecuteMsg = ExecuteMsg;