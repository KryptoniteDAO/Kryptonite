/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint64 = string;
export type Addr = string;
export interface InstantiateMsg {
  claim_able_time: Uint64;
  exit_cycle: Uint64;
  gov?: Addr | null;
  kusd_denom: string;
  kusd_reward_addr: Addr;
  seilor_addr: Addr;
  ve_seilor_addr: Addr;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_fund_config: {
    update_config_msg: UpdateConfigMsg;
  };
} | {
  refresh_reward: {
    account: Addr;
  };
} | {
  unstake: {
    amount: Uint128;
  };
} | {
  withdraw: {
    user: Addr;
  };
} | {
  re_stake: {};
} | {
  get_reward: {};
} | {
  notify_reward_amount: {};
} | {
  set_gov: {
    gov: Addr;
  };
} | {
  accept_gov: {};
} | {
  set_ve_fund_minter: {
    is_ve_minter: boolean;
    minter: Addr;
  };
} | {
  ve_fund_mint: {
    amount: Uint128;
    user: Addr;
  };
};
export type Uint128 = string;
export type Binary = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface UpdateConfigMsg {
  claim_able_time?: Uint64 | null;
  kusd_denom?: string | null;
  kusd_reward_addr?: Addr | null;
  seilor_addr?: Addr | null;
  ve_seilor_addr?: Addr | null;
}
export type QueryMsg = {
  fund_config: {};
} | {
  get_claim_able_seilor: {
    user: Addr;
  };
} | {
  get_reserved_seilor_for_vesting: {
    user: Addr;
  };
} | {
  earned: {
    account: Addr;
  };
} | {
  get_claim_able_kusd: {
    account: Addr;
  };
} | {
  get_user_reward_per_token_paid: {
    account: Addr;
  };
} | {
  get_user_rewards: {
    account: Addr;
  };
} | {
  get_user_time2full_redemption: {
    account: Addr;
  };
} | {
  get_user_unstake_rate: {
    account: Addr;
  };
} | {
  get_user_last_withdraw_time: {
    account: Addr;
  };
} | {
  is_ve_fund_minter: {
    minter: Addr;
  };
};
export interface EarnedResponse {
  amount: Uint128;
}
export interface FundConfigResponse {
  claim_able_time: Uint64;
  exit_cycle: Uint64;
  gov: Addr;
  kusd_denom: string;
  kusd_reward_addr: Addr;
  kusd_reward_total_amount: Uint128;
  kusd_reward_total_paid_amount: Uint128;
  new_gov?: Addr | null;
  reward_per_token_stored: Uint128;
  seilor_addr: Addr;
  token_cap?: Uint128 | null;
  ve_seilor_addr: Addr;
}
export interface GetClaimAbleKusdResponse {
  amount: Uint128;
}
export interface GetClaimAbleSeilorResponse {
  amount: Uint128;
}
export interface GetReservedSeilorForVestingResponse {
  amount: Uint128;
}
export interface UserLastWithdrawTimeResponse {
  user_last_withdraw_time: Uint64;
}
export interface UserRewardPerTokenPaidResponse {
  user_reward_per_token_paid: Uint128;
}
export interface UserRewardsResponse {
  user_rewards: Uint128;
}
export interface UserTime2FullRedemptionResponse {
  user_time2full_redemption: Uint64;
}
export type Uint256 = string;
export interface UserUnstakeRateResponse {
  user_unstake_rate: Uint256;
}
export type Boolean = boolean;
export type FundExecuteMsg = ExecuteMsg;