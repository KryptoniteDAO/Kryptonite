/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.33.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint256 = string;
export interface InstantiateMsg {
  claim_token: Addr;
  duration_per_period: number;
  end_regret_time: number;
  gov?: Addr | null;
  periods: number;
  regret_token_receiver: Addr;
  start_lock_period_time: number;
  start_time: number;
  total_lock_amount: Uint256;
  total_unlock_amount: Uint256;
}
export type ExecuteMsg = {
  update_config: UpdateGlobalConfigMsg;
} | {
  add_user: AddUserMsg[];
} | {
  user_regret: {};
} | {
  user_claim: {};
} | {
  regret_claim: {};
};
export interface UpdateGlobalConfigMsg {
  claim_token?: Addr | null;
  end_regret_time?: number | null;
  gov?: Addr | null;
  regret_token_receiver?: Addr | null;
  start_time?: number | null;
  total_lock_amount?: Uint256 | null;
  total_unlock_amount?: Uint256 | null;
}
export interface AddUserMsg {
  lock_amount: Uint256;
  replace: boolean;
  unlock_amount: Uint256;
  user: Addr;
}
export type QueryMsg = {
  query_global_config: {};
} | {
  query_user_info: {
    user: Addr;
  };
} | {
  query_regret_info: {};
} | {
  query_user_infos: {
    limit?: number | null;
    start_after?: Addr | null;
  };
};
export interface GlobalInfosResponse {
  config: GlobalConfig;
  state: GlobalState;
}
export interface GlobalConfig {
  claim_token: Addr;
  duration_per_period: number;
  end_regret_time: number;
  gov: Addr;
  periods: number;
  regret_token_receiver: Addr;
  start_lock_period_time: number;
  start_time: number;
  total_lock_amount: Uint256;
  total_unlock_amount: Uint256;
  [k: string]: unknown;
}
export interface GlobalState {
  total_user_claimed_lock_amount: Uint256;
  total_user_claimed_unlock_amount: Uint256;
  total_user_lock_amount: Uint256;
  total_user_unlock_amount: Uint256;
  [k: string]: unknown;
}
export interface RegretInfoResponse {
  info: RegretInfo;
}
export interface RegretInfo {
  last_claimed_period: number;
  per_lock_amount: Uint256;
  total_claimed_lock_amount: Uint256;
  total_claimed_unlock_amount: Uint256;
  total_lock_amount: Uint256;
  total_unlock_amount: Uint256;
  [k: string]: unknown;
}
export interface UserInfoResponse {
  claimable_lock_amount: Uint256;
  claimable_unlock_amount: Uint256;
  current_period: number;
  state: UserState;
}
export interface UserState {
  claimed_lock_amount: Uint256;
  claimed_unlock_amount: Uint256;
  is_regret: boolean;
  last_claimed_period: number;
  regret_time: number;
  total_user_lock_amount: Uint256;
  total_user_unlock_amount: Uint256;
  user: Addr;
  user_per_lock_amount: Uint256;
  [k: string]: unknown;
}
export type ArrayOfUserInfoResponse = UserInfoResponse[];
export type DispatcherExecuteMsg = ExecuteMsg;