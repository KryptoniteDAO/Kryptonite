/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  gov?: Addr | null;
  token_address: Addr;
  token_distribute_address: Addr;
  total_distribute_amount: Uint128;
}
export type ExecuteMsg = {
  add_period_configs: {
    period_configs: PeriodConfig[];
  };
} | {
  add_user_period_configs: {
    user_period_configs: UserPeriodConfigMsg[];
  };
} | {
  user_claim_periods: {
    period_ids: number[];
  };
} | {
  update_ownership: Action;
} | {
  update_user_status: {
    status: boolean;
    user_address: Addr;
  };
};
export type Action = {
  transfer_ownership: {
    expiry?: Expiration | null;
    new_owner: string;
  };
} | "accept_ownership" | "renounce_ownership";
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export interface PeriodConfig {
  claimed_from_distribute: boolean;
  period_claimed_amount: Uint128;
  period_claimed_time: number;
  period_id: number;
  period_total_amount: Uint128;
}
export interface UserPeriodConfigMsg {
  user_address: Addr;
  user_claimed_periods: {
    [k: string]: UserPeriodClaimedDetails;
  };
  user_per_period_amount: Uint128;
  user_total_amount: Uint128;
}
export interface UserPeriodClaimedDetails {
  claimed_amount: Uint128;
  claimed_time: number;
}
export type QueryMsg = {
  query_config: {};
} | {
  query_period_config: {
    period_id: number;
  };
} | {
  query_user_period_config: {
    user_address: Addr;
  };
} | {
  get_ownership: {};
} | {
  query_all_period_configs: {};
} | {
  query_user_status: {
    user_address: Addr;
  };
};
export interface OwnershipForAddr {
  owner?: Addr | null;
  pending_expiry?: Expiration | null;
  pending_owner?: Addr | null;
}
export type ArrayOfPeriodConfig = PeriodConfig[];
export interface Config {
  token_address: Addr;
  token_distribute_address: Addr;
  total_distribute_amount: Uint128;
  user_register_amount: Uint128;
}
export interface UserPeriodConfig {
  user_claimed_periods: {
    [k: string]: UserPeriodClaimedDetails;
  };
  user_per_period_amount: Uint128;
  user_total_amount: Uint128;
  user_total_claimed_amount: Uint128;
}
export type Boolean = boolean;
export type DistributeCoExecuteMsg = ExecuteMsg;