/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  boost: Addr;
  duration: Uint128;
  fund: Addr;
  gov?: Addr | null;
  reward_controller_addr: Addr;
  rewards_token: Addr;
  staking_token: Addr;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_staking_config: {
    config_msg: UpdateStakingConfigStruct;
  };
} | {
  update_staking_state: {
    duration: Uint128;
  };
} | {
  get_reward: {};
} | {
  withdraw: {
    amount: Uint128;
  };
} | {
  notify_reward_amount: {
    amount: Uint128;
  };
} | {
  set_gov: {
    gov: Addr;
  };
} | {
  accept_gov: {};
};
export type Binary = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface UpdateStakingConfigStruct {
  boost?: Addr | null;
  fund?: Addr | null;
  reward_controller_addr?: Addr | null;
}
export type QueryMsg = {
  reward_per_token: {};
} | {
  last_time_reward_applicable: {};
} | {
  get_boost: {
    account: Addr;
  };
} | {
  earned: {
    account: Addr;
  };
} | {
  query_staking_config: {};
} | {
  query_staking_state: {};
} | {
  get_user_updated_at: {
    account: Addr;
  };
} | {
  get_user_reward_per_token_paid: {
    account: Addr;
  };
} | {
  balance_of: {
    account: Addr;
  };
};
export interface BalanceOfResponse {
  balance_of: Uint128;
}
export interface EarnedResponse {
  earned: Uint128;
}
export interface GetBoostResponse {
  boost: Uint128;
}
export interface GetUserRewardPerTokenPaidResponse {
  reward_per_token_paid: Uint128;
}
export interface GetUserUpdatedAtResponse {
  updated_at: Uint128;
}
export interface LastTimeRewardApplicableResponse {
  last_time_reward_applicable: Uint128;
}
export interface StakingConfigResponse {
  boost: Addr;
  fund: Addr;
  gov: Addr;
  reward_controller_addr: Addr;
  rewards_token: Addr;
  staking_token: Addr;
}
export type Uint256 = string;
export interface StakingStateResponse {
  duration: Uint128;
  finish_at: Uint128;
  reward_per_token_stored: Uint128;
  reward_rate: Uint256;
  total_supply: Uint128;
  updated_at: Uint128;
}
export interface RewardPerTokenResponse {
  reward_per_token: Uint128;
}
export type StakingExecuteMsg = ExecuteMsg;